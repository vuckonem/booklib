<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>app</groupId>
	<artifactId>booklib</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>booklib</name>
	<description>Book shop app</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId> <!-- By rooting the project in "parent starter" build inherits dependency 
			VERSIONS for commonly used libraries -->
		<version>1.4.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency><!-- Ivan dodao za autobuild dok app radi -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId> <!-- Because Thymeleaf is on the classpath, it will be configured as a view 
				option for Spring MVC, including a Thymeleaf template resolver, template 
				engine, and view resolver. The template resolver is configured to resolve 
				templates from /templates relative to the root of the classpath. Because 
				Thymeleaf is on the classpath, Thymeleaf will be configured as a view option 
				for Spring MVC, including a Thymeleaf template resolver, template engine, 
				and view resolver. The template resolver is configured to resolve templates 
				from /templates relative to the root of the classpath -->
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId> <!-- Because Spring MVC is on the classpath (thanks to the web starter dependency), 
				Springâ€™s DispatcherServlet will be configured and Spring MVC will be enabled -->
			<!-- Because Tomcat is on the classpath (transitively referred to by the 
				web starter dependency), an embedded Tomcat container will be started to 
				listen on port 8080. -->
		</dependency>

		<!-- <dependency> <groupId>com.h2database</groupId> <artifactId>h2</artifactId> 
			<scope>runtime</scope> </dependency> -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId> <!-- Adding it when wanting to add security, username: "user" pass is writen 
				in console -->
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>


</project>
